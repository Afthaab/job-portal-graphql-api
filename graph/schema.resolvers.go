package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.40

import (
	"context"
	"fmt"

	"github.com/afthaab/job-portal-graphql/graph/model"
)

// CreateSignup is the resolver for the createSignup field.
func (r *mutationResolver) CreateSignup(ctx context.Context, input model.NewUser) (*model.User, error) {
	return r.Svc.UserSignup(input)
}

// CreateNewCompany is the resolver for the createNewCompany field.
func (r *mutationResolver) CreateNewCompany(ctx context.Context, input model.NewComapany) (*model.Company, error) {
	return r.Svc.CreateCompany(input)
}

// CreateJob is the resolver for the createJob field.
func (r *mutationResolver) CreateJob(ctx context.Context, input model.NewJob) (*model.Job, error) {
	return r.Svc.CreateJob(input)
}

// ViewAllCompanies is the resolver for the viewAllCompanies field.
func (r *queryResolver) ViewAllCompanies(ctx context.Context) ([]*model.Company, error) {
	return r.Svc.ViewAllCompanies()
}

// ViewCompanyByID is the resolver for the viewCompanyById field.
func (r *queryResolver) ViewCompanyByID(ctx context.Context, cid string) (*model.Company, error) {
	return r.Svc.ViewCompanyById(cid)
}

// ViewJobsByID is the resolver for the viewJobsById field.
func (r *queryResolver) ViewJobsByID(ctx context.Context, jid string) (*model.Job, error) {
	return r.Svc.ViewJobById(jid)
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }

// !!! WARNING !!!
// The code below was going to be deleted when updating resolvers. It has been copied here so you have
// one last chance to move it out of harms way if you want. There are two reasons this happens:
//   - When renaming or deleting a resolver the old code will be put in here. You can safely delete
//     it when you're done.
//   - You have helper methods in this file. Move them out to keep these resolver files clean.
func (r *mutationResolver) CreateLogin(ctx context.Context, input model.NewJob) (*model.Job, error) {
	panic(fmt.Errorf("not implemented: CreateLogin - createLogin"))
}
